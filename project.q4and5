import csv
import matplotlib.pyplot as plot

#Question 1
with open('2019_car_sale.csv', 'r') as csv_file:
    csv_reader = csv.reader(csv_file)

    next(csv_file)
    contract_date = []
    car_model = []
    car_brand = []
    safety_rating = []
    car_colors = []
    sales = []
    states = []
    for line in csv_reader:
        contract_date.append(line[1])
        sales.append(line[5])
        states.append(line[3])
        if line[0] in car_model:
            pass
        else:
            car_model.append(line[0])
        if line[2] in car_brand:
            pass
        else:
            car_brand.append(line[2])
        if line[4] in safety_rating:
            pass
        else:
            safety_rating.append(line[4])

        if line[6] in car_colors:
            pass
        else:
            car_colors.append(line[6])


def sales_by_state(state, states, sale):
    '''This function calculates the amount of sale contributed by each state.'''
    state_sales = 0
    for i in range(679):
        if state in states[i]:
            state_sales += sales[i]
    return state_sales


total_sales = 0
for i in range(len(sales)):
    sales[i] = int(sales[i].replace(',', ""))
for i in range(679):
    total_sales += sales[i]

fl_sales = sales_by_state('Florida', states, sales)
oh_sales = sales_by_state('Ohio', states, sales)
tx_sales = sales_by_state('Texas', states, sales)
nv_sales = sales_by_state('Nevada', states, sales)
ca_sales = sales_by_state('California', states, sales)

print(f"{'='*15}Dataset Details{'='*15}\n")

print(f"Total number of deals: {len(contract_date)}")
print(f"Number of different car models: {len(car_model)}")
print(f"Number of different car brands: {len(car_brand)}")
print(f"Number of different car safety ratings: {len(safety_rating)}")
print(f"Number of different car colors: {len(car_colors)}")
print(f"Total sales amount: {total_sales}")
print(f"\n{'='*45}")
print()

#Question 2
barchart = plot.bar(['Texas', 'California', 'Florida', 'Ohio', 'Nevada'], [tx_sales, ca_sales, fl_sales, oh_sales, nv_sales], align='center', alpha=0.9)
plot.xlabel('States')
plot.ylabel('Sales ($)')
plot.title('Amount of Sale Per State')
print(f"Most number of cars sold ({fl_sales}) was in Florida.")
plot.show()

#Question 3




#Question 4 
print("========Amount of sale based on car brands========")
print()
import matplotlib.pyplot as plt
with open('2019_car_sale.csv', 'r') as csv_file:
    csv_reader = csv.reader(csv_file)
    next(csv_file)
    brandsales = {}
    brandsalesfinal = {}
    brandsalessorted = {}
    totalsales = 0
    for line in csv_reader:
        saleamount = line[5].split(',')
        saleamount = int(saleamount[0] + saleamount[1])
        if line[2] in brandsales:
            brandsales[line[2]] = brandsales[line[2]] + saleamount
        else:
            brandsales[line[2]] = saleamount
        totalsales += saleamount
othersmaximum = totalsales * .04
brandsalesfinal['Others'] = 0
for key, val in brandsales.items():
    if val > othersmaximum:
        brandsalesfinal[key] = val
    else:
        brandsalesfinal['Others'] = brandsalesfinal['Others'] + val
for brand in sorted(brandsalesfinal, key=brandsalesfinal.get, reverse=True):
    brandsalessorted[brand] = brandsalesfinal[brand]
for key, val in brandsalessorted.items():
    val = val / totalsales
    percentage = '{:.2%}'.format(val)
    print(f"{key} : {percentage}")
labels = brandsalessorted.keys()
sizes = brandsalessorted.values()
piechart = plt.pie(sizes, labels = labels, autopct = '%1.1f%%')
plt.show()
print("==================")


#Question 5
import matplotlib.pyplot as pt
with open('2019_car_sale.csv', 'r') as csv_file:
    csv_reader = csv.reader(csv_file)
    next(csv_file)
    texas = {'January': 0, 'February': 0, 'March': 0, 'April': 0, 'May': 0, 'June': 0, 'July': 0, 'August': 0, 'September': 0, 'October': 0, 'November': 0, 'December': 0}
    california = {'January': 0, 'February': 0, 'March': 0, 'April': 0, 'May': 0, 'June': 0, 'July': 0, 'August': 0, 'September': 0, 'October': 0, 'November': 0, 'December': 0}
    florida = {'January': 0, 'February': 0, 'March': 0, 'April': 0, 'May': 0, 'June': 0, 'July': 0, 'August': 0, 'September': 0, 'October': 0, 'November': 0, 'December': 0}
    ohio = {'January': 0, 'February': 0, 'March': 0, 'April': 0, 'May': 0, 'June': 0, 'July': 0, 'August': 0, 'September': 0, 'October': 0, 'November': 0, 'December': 0}
    nevada = {'January': 0, 'February': 0, 'March': 0, 'April': 0, 'May': 0, 'June': 0, 'July': 0, 'August': 0, 'September': 0, 'October': 0, 'November': 0, 'December': 0}
    for line in csv_reader:
        saleamount = line[5].split(',')
        saleamount = int(saleamount[0] + saleamount[1])
        months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
        contractdate = line[1].split('/')
        contractdate = int(contractdate[0])
        contractdate = months[contractdate - 1]
        if line[3] == 'Texas':
            texas[contractdate] += saleamount
        elif line[3] == 'California':
            california[contractdate] += saleamount
        elif line[3] == 'Florida':
            florida[contractdate] += saleamount
        elif line[3] == 'Ohio':
            ohio[contractdate] += saleamount
        elif line[3] == 'Nevada':
            nevada[contractdate] += saleamount   

pt.plot(list(texas.keys()), list(texas.values()), label = 'Texas', color = 'blue', linewidth = '.7')
pt.plot(list(california.keys()), list(california.values()), label = 'California', color = 'gold', linewidth = '.7')
pt.plot(list(florida.keys()), list(florida.values()), label = 'Florida', color = 'green', linewidth = '.7')
pt.plot(list(ohio.keys()), list(ohio.values()), label = 'Ohio', color = 'red', linewidth = '.7')
pt.plot(list(nevada.keys()), list(nevada.values()), label = 'Nevada', color = 'purple', linewidth = '.7')
pt.xlabel('Month', fontsize = '7')
pt.xticks(fontsize = '5')
pt.yticks(fontsize = '5')
pt.ylabel('Amount of Sale', fontsize = '7')
pt.title('Amount of sale in different months in each state', fontsize = '7')
pt.legend(loc = 'upper right', fontsize = '4')
pt.show()
